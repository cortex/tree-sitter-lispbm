{
  "$schema": "https://tree-sitter.github.io/tree-sitter/assets/schemas/grammar.schema.json",
  "name": "lispbm",
  "rules": {
    "program": {
      "type": "REPEAT",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "SYMBOL",
            "name": "_expression"
          },
          {
            "type": "SYMBOL",
            "name": "comment"
          }
        ]
      }
    },
    "_expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "specialForm"
        },
        {
          "type": "SYMBOL",
          "name": "application"
        },
        {
          "type": "SYMBOL",
          "name": "_atom"
        },
        {
          "type": "SYMBOL",
          "name": "progn"
        }
      ]
    },
    "_atom": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "symbol"
        },
        {
          "type": "SYMBOL",
          "name": "number"
        },
        {
          "type": "SYMBOL",
          "name": "string"
        },
        {
          "type": "SYMBOL",
          "name": "quote"
        },
        {
          "type": "SYMBOL",
          "name": "byteArray"
        }
      ]
    },
    "specialForm": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "FIELD",
          "name": "special",
          "content": {
            "type": "SYMBOL",
            "name": "special"
          }
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_expression"
          }
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "application": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "FIELD",
          "name": "name",
          "content": {
            "type": "SYMBOL",
            "name": "symbol"
          }
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_expression"
          }
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "progn": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "{"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "_expression"
          }
        },
        {
          "type": "STRING",
          "value": "}"
        }
      ]
    },
    "symbol": {
      "type": "PATTERN",
      "value": "-?[a-zA-Z+/=<>#!][a-zA-Z0-9+\\-/=<>!?_]{0,255}"
    },
    "quote": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "'"
        },
        {
          "type": "SYMBOL",
          "name": "_expression"
        }
      ]
    },
    "_numQualifier": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "b"
        },
        {
          "type": "STRING",
          "value": "i"
        },
        {
          "type": "STRING",
          "value": "u"
        },
        {
          "type": "STRING",
          "value": "i32"
        },
        {
          "type": "STRING",
          "value": "u32"
        },
        {
          "type": "STRING",
          "value": "i64"
        },
        {
          "type": "STRING",
          "value": "u64"
        },
        {
          "type": "STRING",
          "value": "f32"
        },
        {
          "type": "STRING",
          "value": "f632"
        }
      ]
    },
    "special": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "quote"
        },
        {
          "type": "STRING",
          "value": "define"
        },
        {
          "type": "STRING",
          "value": "lambda"
        },
        {
          "type": "STRING",
          "value": "if"
        },
        {
          "type": "STRING",
          "value": "progn"
        },
        {
          "type": "STRING",
          "value": "and"
        },
        {
          "type": "STRING",
          "value": "or"
        },
        {
          "type": "STRING",
          "value": "let"
        },
        {
          "type": "STRING",
          "value": "setq"
        },
        {
          "type": "STRING",
          "value": "def"
        },
        {
          "type": "STRING",
          "value": "defun"
        },
        {
          "type": "STRING",
          "value": "defunret"
        },
        {
          "type": "STRING",
          "value": "var"
        }
      ]
    },
    "number": {
      "type": "SEQ",
      "members": [
        {
          "type": "PATTERN",
          "value": "\\-?\\d+(\\.\\d+)?"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "_numQualifier"
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "string": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "\""
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "PATTERN",
                "value": "[^\"]"
              },
              {
                "type": "STRING",
                "value": "\\\""
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": "\""
        }
      ]
    },
    "byteArray": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "["
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "number"
          }
        },
        {
          "type": "STRING",
          "value": "]"
        }
      ]
    },
    "comment": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": ";"
        },
        {
          "type": "PATTERN",
          "value": ".*"
        }
      ]
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": []
}
